@page "/alumnos"

@rendermode InteractiveServer

<h3>Capturar Alumnos</h3>

<EditForm Model="_alumno" FormName="frmAlumno" OnValidSubmit="Guardar">
    <DataAnnotationsValidator/> @* * /validar que sea requerido llenar los espacios [required] *@
    <ValidationSummary/> @* Muestra un texto de color rojo que dice un resumen de los errores *@

    <div class="mb-3">
        <label for="txtNombre" class="form-label">Nombre</label>
        <InputText @bind-Value="_alumno.Nombre" class="form-control" id="txtNombre" placeholder="Ingresa tu nombre" />
        <ValidationMessage For="()=>_alumno.Nombre"/>
    </div>

    <div class="mb-3">
        <label for="txtCorreo" class="form-label">Correo</label>
        <InputText @bind-Value="_alumno.Correo" class="form-control" id="txtCorreo" placeholder="Ingresa tu correo" />
        <ValidationMessage For="()=>_alumno.Correo" />
    </div>

    <div class="mb-3">
        <label for="txtEdad" class="form-label">Edad</label>
        <InputNumber @bind-Value="_alumno.Edad" class="form-control" id="txtEdad" placeholder="Ingresa tu edad" />
        <ValidationMessage For="()=>_alumno.Edad" />
    </div>

    <div class="mb-3">
        <label for="txtGenero" class="form-label">Genero</label>
        <InputRadioGroup @bind-Value="_alumno.Genero" Name="rdgGenero" class="form-check-input" >
            <InputRadio Value="@("Mujer")" class="ms-3"  />Mujer
            <InputRadio Value="@("Hombre")" class="ms-3" />
            Hombre
            <InputRadio Value="@("Transexual")" class="ms-3"/>Sin Informar
        </InputRadioGroup>
        <ValidationMessage For="()=>_alumno.Genero" />
    </div>


    <button type="submit" class="btn btn-success">Guardar</button>

</EditForm>

<h4>Alumnos capturados: @_alumnos.Count</h4>
<table class="table table-striped">
    <thead>
        <tr>
            <th>Nombre</th>
            <th>Correo</th>
            <th>Edad</th>
            <th>Genero</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (Persona persona in _alumnos)
        {
            <tr>
                <td>@persona.Nombre</td>
                <td>@persona.Correo</td>
                <td>@persona.Edad</td>
                <td>@persona.Genero</td>
                <td>
                    <button class="btn btn-outline-danger" @onclick="() => Eliminar(persona)">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="black" class="bi bi-trash" viewBox="0 0 16 16">
                            <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z" />
                            <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z" />
                        </svg>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private Persona _alumno = new();
    private List<Persona> _alumnos = new();

    private void Guardar()
    {
        _alumnos.Add(new Persona { Nombre = _alumno.Nombre, Correo = _alumno.Correo, Edad = _alumno.Edad, Genero =_alumno.Genero });
        _alumno = new(); // Resetea el formulario
        StateHasChanged();
    }

    private void Eliminar(Persona _persona)
    {
        _alumnos.Remove(_persona);
    }
}
